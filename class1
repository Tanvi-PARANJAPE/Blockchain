
ADRIKA DANI <daniadrik@gmail.com>
12:04â€¯PM (0 minutes ago)
to me

//SPDX-License-Identifier: MIT

pragma solidity >=0.7.0 < 0.9.0;

contract SimpleStorage{
    uint256 favouritenumber = 5;  //uint is unsigned integer we are initialising it to 5 if dont write 5 then it will take 0
    bool favouritebool = true; //bool is boolean
    string favouritestring = "Hello";   //in solidity it does not auto recognize. you need to tell which is str, float, int etc
    int favouriteinteger = 5;
    address favouriteaddress = 0xa37dB60588270AB94b3235AE0d291f190b81B921;
    bytes32 favouriteByte32 = "Cat";
}



//SPDX-License-Identifier: MIT

pragma solidity >=0.7.0 < 0.9.0;

contract SimpleStorage{
    uint256 public favouritenumber = 5;  //uint is unsigned integer we are initialising it to 5 if dont write 5 then it will take 0
    function Store(uint256 _favouriteNumber) public {
        favouritenumber = _favouriteNumber;
    }   //parameter is uint256, func name is store, Public functions are part of the contract interface and can be either called internally or via messages.
}



//SPDX-License-Identifier: MIT

pragma solidity >=0.7.0 < 0.9.0;

contract SimpleStorage{
    uint256 public favouritenumber = 5;  //uint is unsigned integer we are initialising it to 5 if dont write 5 then it will take 0
    function Store(uint256 _favouriteNumber) public {
        favouritenumber = _favouriteNumber;
    }   //parameter is uint256, func name is store, Public functions are part of the contract interface and can be either called internally or via messages.
    function retrieve() public view returns (uint256){
        return favouritenumber;
    }
}
